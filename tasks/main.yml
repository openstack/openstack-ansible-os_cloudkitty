---
# Copyright 2016, Rackspace US, Inc.
#
# (C) 2016 Michael Rice <michael.rice@rackspace.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
    - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
    - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
    - "{{ ansible_facts['distribution'] | lower }}.yml"
    - "{{ ansible_facts['os_family'] | lower }}.yml"
  tags:
    - always

- name: Check init system
  command: cat /proc/1/comm
  changed_when: false
  register: _pid1_name
  tags:
    - always

- name: Set the name of pid1
  set_fact:
    pid1_name: "{{ _pid1_name.stdout }}"
  tags:
    - always

- import_tasks: db_setup.yml
  when:
    - _cloudkitty_is_first_play_host
  vars:
    _oslodb_setup_host: "{{ cloudkitty_db_setup_host }}"
    _oslodb_ansible_python_interpreter: "{{ cloudkitty_db_setup_python_interpreter }}"
    _oslodb_setup_endpoint: "{{ cloudkitty_galera_address }}"
    _oslodb_setup_port: "{{ cloudkitty_galera_port }}"
    _oslodb_databases:
      - name: "{{ cloudkitty_galera_database }}"
        users:
          - username: "{{ cloudkitty_galera_user }}"
            password: "{{ cloudkitty_container_mysql_password }}"
  tags:
    - common-db
    - cloudkitty-config

- import_tasks: mq_setup.yml
  when:
    - _cloudkitty_is_first_play_host
  vars:
    _oslomsg_rpc_setup_host: "{{ cloudkitty_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ cloudkitty_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ cloudkitty_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ cloudkitty_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ cloudkitty_oslomsg_rpc_transport }}"
    _oslomsg_notify_setup_host: "{{ cloudkitty_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ cloudkitty_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ cloudkitty_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ cloudkitty_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ cloudkitty_oslomsg_notify_transport }}"
  tags:
    - common-mq
    - cloudkitty-config

- import_tasks: cloudkitty_pre_install.yml
  tags:
    - cloudkitty-install

- name: Install the python venv
  import_role:
    name: "python_venv_build"
  vars:
    venv_python_executable: "{{ cloudkitty_venv_python_executable }}"
    venv_build_constraints: "{{ cloudkitty_git_constraints }}"
    venv_build_distro_package_list: "{{ cloudkitty_devel_distro_packages }}"
    venv_install_destination_path: "{{ cloudkitty_bin | dirname }}"
    venv_install_distro_package_list: "{{ cloudkitty_distro_packages }}"
    venv_pip_install_args: "{{ cloudkitty_pip_install_args }}"
    venv_pip_packages: "{{ cloudkitty_pip_packages | union((cloudkitty_oslomsg_amqp1_enabled | bool) | ternary(cloudkitty_optional_oslomsg_amqp1_pip_packages, [])) }}"
    venv_facts_when_changed:
      - section: "cloudkitty"
        option: "venv_tag"
        value: "{{ cloudkitty_venv_tag }}"
  tags:
    - cloudkitty-install

- import_tasks: cloudkitty_post_install.yml
  tags:
    - cloudkitty-config

- name: Import uwsgi role
  import_role:
    name: uwsgi
  vars:
    uwsgi_services: "{{ uwsgi_cloudkitty_services }}"
    uwsgi_install_method: "source"
  tags:
    - cloudkitty-config
    - uwsgi


- import_tasks: service_setup.yml
  vars:
    _service_adminuri_insecure: "{{ keystone_service_adminuri_insecure }}"
    _service_setup_host: "{{ cloudkitty_service_setup_host }}"
    _service_setup_host_python_interpreter: "{{ cloudkitty_service_setup_host_python_interpreter }}"
    _service_project_name: "{{ cloudkitty_service_project_name }}"
    _service_region: "{{ cloudkitty_service_region }}"
    _service_users:
      - name: "{{ cloudkitty_service_user_name }}"
        password: "{{ cloudkitty_service_password }}"
        role: "rating"
      - name: "{{ cloudkitty_service_user_name }}"
        role: admin
    _service_endpoints:
      - service: "{{ cloudkitty_service_name }}"
        interface: "public"
        url: "{{ cloudkitty_service_publicurl }}"
      - service: "{{ cloudkitty_service_name }}"
        interface: "internal"
        url: "{{ cloudkitty_service_internalurl }}"
      - service: "{{ cloudkitty_service_name }}"
        interface: "admin"
        url: "{{ cloudkitty_service_adminurl }}"
    _service_catalog:
      - name: "{{ cloudkitty_service_name }}"
        type: "rating"
        description: "OpenStack Rating Service"
  when: _cloudkitty_is_first_play_host
  tags:
    - cloudkitty-config

- import_tasks: cloudkitty_db_sync.yml
  when:
    - _cloudkitty_is_first_play_host
  tags:
    - cloudkitty-config

- name: Run the systemd service role
  include_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ cloudkitty_system_user_name }}"
    systemd_group_name: "{{ cloudkitty_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: cloudkitty
    systemd_lock_path: /var/lock/cloudkitty
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services:
      - service_name: "{{ service_var.service_name }}"
        enabled: yes
        state: started
        execstarts: "{{ service_var.execstarts }}"
        execreloads: "{{ service_var.execreloads | default([]) }}"
        config_overrides: "{{ service_var.init_config_overrides }}"
  with_items: "{{ filtered_cloudkitty_services }}"
  loop_control:
    loop_var: service_var
  tags:
    - cloudkitty-config
    - systemd-service

- name: Flush handlers
  meta: flush_handlers
